{"version":3,"sources":["SelectableDataTable.tsx","index.tsx"],"names":["number_formatter","num","Math","abs","sign","Number","toFixed","currency_formatter","currency","CustomToolbar","digits_formatter","params","value","number_color_formatter","clsx","negative","positive","str_color_formatter","String","substring","withStreamlitConnection","props","useEffect","Streamlit","setFrameHeight","useState","selectionModel","setSelectionModel","display","args","return_type","columns_overview","field","headerName","width","hideable","renderCell","Link","href","underline","color","type","align","headerAlign","valueFormatter","rank","description","sortable","valueGetter","row","TradeCurrency","Price","curr","FundCurrency","NAV","cellClassName","AUM","columns_cumulative","minWidth","flex","columns_annualised","columns_flow","columns_div","Dividend","Currency","rows","data","columns","fieldHeaders","column_names","columns_calender","forEach","item","push","substr","calender_year_columns","Object","keys","style","height","pageSize","rowsPerPageOptions","checkboxSelection","loading","length","rowHeight","onSelectionModelChange","newSelectionModel","setComponentValue","components","Toolbar","sx","fontWeight","initialState","columnVisibilityModel","headers","yearsColumnsHide","slice","columnsHide","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eaa9415.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect, ReactText } from \"react\"\nimport clsx from 'clsx';\nimport { DataGrid, GridColDef,GridValueGetterParams, GridSelectionModel, GridCellParams, GridValueFormatterParams, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarDensitySelector} from '@mui/x-data-grid';\n\nimport {ComponentProps, Streamlit, withStreamlitConnection} from \"streamlit-component-lib\"\nimport Link from '@mui/material/Link'\n\nfunction number_formatter(num) {\n  if (Math.abs(num) > 999999999 ) {\n    return Math.sign(num)*Number((Math.abs(num)/1000000000).toFixed(1)) + 'B'\n  } else if (Math.abs(num) > 999999) {\n    return Math.sign(num)*Number((Math.abs(num)/1000000).toFixed(1)) + 'M'\n  } else if ( Math.abs(num) > 999) {\n    return Math.sign(num)*Number((Math.abs(num)/1000).toFixed(1)) + 'K'\n  } else {\n    return  Math.sign(num)*Number(Math.abs(num).toFixed(1))\n  }\n}\n\nfunction currency_formatter(num, currency) {\n  let value;\n  const sign = Math.sign(num) === 1 ? '' : '-'\n  if (currency ==='USD') {\n    value = sign+'$'+number_formatter(Math.abs(Number(num)))\n  } else if (currency === 'EUR') {\n    value = sign+'€'+number_formatter(Math.abs(Number(num)))\n  } else if (currency === 'GBP') {\n    value = sign+'£'+number_formatter(Math.abs(Number(num)))\n  } else if (currency === 'JPY') {\n    value = sign+'¥'+number_formatter(Math.abs(Number(num)))\n  } else if (currency === 'GBX') {\n    value = sign + 'GBp ' + number_formatter(Math.abs(Number(num)))\n  } else {\n    value = number_formatter(Math.abs(Number(num)))\n  }\n  return value\n}\n\n\nfunction currency_reverse(curr) {\n  let originalCurrency\n  if (curr === '$') {\n    originalCurrency = 'USD'\n  } else if (curr === '€') {\n    originalCurrency = 'EUR'\n  } else if (curr === '£') {\n    originalCurrency = 'GBP'\n  } else if (curr === '¥') {\n    originalCurrency = 'JPY'\n  } else {\n    originalCurrency = curr\n  }\n  return originalCurrency\n}\n\nfunction rank_formatter(rank) {\n  let rank_stars\n  if (rank===5) {\n    rank_stars = '⭐⭐⭐⭐⭐'\n  } else if(rank===4) {\n    rank_stars = '⭐⭐⭐⭐'\n  } else if(rank===3) {\n    rank_stars = '⭐⭐⭐'\n  } else if(rank===2) {\n    rank_stars = '⭐⭐'\n  } else {\n    rank_stars = '⭐'\n  }\n           \n  return rank_stars\n}\n\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton />\n      <GridToolbarFilterButton />\n      <GridToolbarDensitySelector />\n    </GridToolbarContainer>\n  );\n}\n\n\nconst digits_formatter = (params: GridValueFormatterParams) => {\n        return `${params.value ? Number(params.value).toFixed(2) + '' : ''}`\n      }\n\nconst number_color_formatter = (params: GridCellParams<number>) =>\n        clsx('super-app', {\n          negative: params.value < 0,\n          positive: params.value > 0,\n        })\n\nconst str_color_formatter = (params: GridCellParams<number>) =>\n        clsx('super-app', {\n          // negative: params.value < 0,\n          // positive: params.value > 0,\n          negative: String(params.value).substring(0,1) === '-',\n          positive: String(params.value).substring(0,1) !== '0',\n        })\n\n\nfunction calender_year_columns(data, column_names) {\n  let columns_calender = []\n  column_names.forEach(item => {\n    if (item === 'id' || item === 'ISINCode' || item === 'Exchange') {\n\n    } else if (item === 'ExchangeTicker') {\n      columns_calender.push({\n        field: 'ExchangeTicker',\n        headerName: 'Ticker',\n        width: 100,\n      })\n    } else if (item === 'FundName') {\n      columns_calender.push({\n        field: 'FundName',\n        headerName: 'Name',\n        width: 300,\n      })\n    } else if (item === 'YTD') {\n      columns_calender.push({\n        field: 'YTD',\n        headerName: 'YTD (%)',\n        type: 'number',\n        width: 100,\n      })\n    } else {\n      columns_calender.push({\n        field: item,\n        headerName: item.substr(4,4) + ' (%)',\n        type: 'number',\n        minWidth: 100,\n        flex: 1,\n        valueFormatter: digits_formatter,\n        cellClassName: number_color_formatter,\n      })     \n    }\n  })\n  return columns_calender\n}\n\nconst SelectableDataTable: React.FC<ComponentProps> = props => {\n  useEffect(() => {\n    Streamlit.setFrameHeight()\n  })\n\n\n  const handleSelectionChange = (value: ReactText[]): void => {\n      setSelectionModel(value)\n      Streamlit.setComponentValue(value)\n    }\n\n  const [selectionModel, setSelectionModel] =  useState<GridSelectionModel>([]);\n\n  const display = props.args.display;\n  const currency = props.args.currency;\n  const return_type = props.args.return_type;\n\n  const columns_overview: GridColDef[] = [\n    {\n      field: 'ExchangeTicker',\n      headerName: 'Ticker',\n      width: 100,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'FundName',\n      headerName: 'Name',\n      width: 300,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'Exchange',\n      headerName: 'Exchange',\n      width: 110,\n    },\n    {\n      field: 'Rank5',\n      headerName: 'Rank',\n      type: 'number',\n      width: 100,\n      align: 'left',\n      headerAlign: 'center',\n      valueFormatter: (params: GridValueFormatterParams) =>{\n        return `${rank_formatter(Number(params.value))}`\n      }\n    },\n    {\n      field: 'Price',\n      headerName: 'Price',\n      description: 'The price is as of June 19, 2021',\n      sortable: false,\n      width: 100,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.TradeCurrency || ''} ${params.row.Price || ' '} `,\n    },\n    {\n      field: 'Volume3M',\n      headerName: 'Volume',\n      type: 'number',\n      description: '3 Months Average Daily Volume (in shares)',\n      width: 120,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${number_formatter(Number(params.value as number))}`;\n      },\n    },\n    {\n      field: 'FundCurrency',\n      headerName: 'Fund Currency',\n      description: 'The price is as of June 19, 2021',\n      width: 130,\n      valueGetter: (params: GridValueGetterParams) => {\n        return `${currency_reverse(params.value)}`\n      }\n    },\n    {\n      field: 'NAV',\n      headerName: 'NAV',\n      description: 'Net Asset Value (as of June 2019, 2021',\n      sortable: false,\n      width: 100,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.FundCurrency || ''} ${Number(params.row.NAV).toFixed(2) || ' '} `,\n    },\n    {\n      field: 'NAV_1DChange',\n      headerName: 'Daily Change',\n      type: 'number',\n      description: 'The price is as of June 19, 2021',\n      width: 120,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${Number(params.value).toFixed(2)}%`\n      },\n      cellClassName: (params: GridCellParams<number>) =>\n        clsx('super-app', {\n          negative: params.value < 0,\n          positive: params.value > 0,\n        }),\n    },\n    {\n      field: 'AUM',\n      headerName: 'AUM',\n      description: 'Asset Under Management (as of June 2019, 2021)',\n      width: 120,\n      type: 'number',\n\n      valueGetter: (params: GridValueGetterParams) => {\n        return currency === 'Fund currency' ? `${params.row.FundCurrency || ''}${currency_formatter(params.row.AUM, currency)}` : `${currency_formatter(params.row.AUM, currency)}`\n      }\n    },\n    {\n      field: 'DistributionIndicator',\n      headerName: 'Distribution',\n      width: 110,\n    },\n    {\n      field: 'TotalExpenseRatio',\n      headerName: 'Fees (%)',\n      type: 'number',\n      width: 90,\n    },\n    {\n      field: 'ETPIssuerName',\n      headerName: 'Issuer',\n      width: 110,\n    },\n    {\n      field: 'IndexName',\n      headerName: 'Index',\n      width: 200,\n    },\n  ];\n\n\n  const columns_cumulative: GridColDef[] = [\n    {\n      field: 'ExchangeTicker',\n      headerName: 'Ticker',\n      width: 100,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'FundName',\n      headerName: 'Name',\n      width: 300,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: '1M',\n      headerName: '1M (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '3M',\n      headerName: '3M (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '6M',\n      headerName: '6M (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: 'YTD',\n      headerName: 'YTD (%)',\n      type: 'number',\n      minWidth: 90,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '1Y',\n      headerName: '1Y (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '3Y',\n      headerName: '3Y (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '5Y',\n      headerName: '5Y (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '10Y',\n      headerName: '10Y (%)',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    ]\n\n  const columns_annualised: GridColDef[] = [\n    {\n      field: 'ExchangeTicker',\n      headerName: 'Ticker',\n      width: 100,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'FundName',\n      headerName: 'Name',\n      width: 300,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: '1Y',\n      headerName: '1Y (%)',\n      type: 'number',\n      minWidth: 90,\n      flex: 1,\n      headerAlign: 'center',\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '3Y',\n      headerName: '3Y (%)',\n      type: 'number',\n      minWidth: 90,\n      flex: 1,\n      headerAlign: 'center',\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '5Y',\n      headerName: '5Y (%)',\n      type: 'number',\n      minWidth: 90,\n      flex: 1,\n      headerAlign: 'center',\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '10Y',\n      headerName: '10Y (%)',\n      type: 'number',\n      minWidth: 90,\n      flex: 1,\n      headerAlign: 'center',\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    ]\n\n\n  const columns_flow: GridColDef[] = [\n    {\n      field: 'ExchangeTicker',\n      headerName: 'Ticker',\n      width: 100,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'FundName',\n      headerName: 'Name',\n      width: 300,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'Currency',\n      headerName: 'Fund Currency',\n      width: 130,\n      align: 'center'\n    },\n    {\n      field: 'AUM',\n      headerName: 'AUM',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n    },\n    {\n      field: '1M',\n      headerName: '1M',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '3M',\n      headerName: '3M',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '6M',\n      headerName: '6M',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: 'YTD',\n      headerName: 'YTD',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '1Y',\n      headerName: '1Y',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '3Y',\n      headerName: '3Y',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    {\n      field: '5Y',\n      headerName: '5Y',\n      type: 'number',\n      minWidth: 80,\n      flex: 1,\n      valueFormatter: (params: GridValueFormatterParams) => {\n        return `${currency_formatter(params.value, currency)}`;\n      },\n      cellClassName: number_color_formatter,\n    },\n    ]\n\n  const columns_div: GridColDef[] = [\n    {\n      field: 'ExchangeTicker',\n      headerName: 'Ticker',\n      width: 100,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'FundName',\n      headerName: 'Name',\n      width: 300,\n      hideable: false,\n      renderCell: (params) => {\n        return (<Link href=\"#\" underline=\"hover\" color=\"inherit\">{params.value}</Link>)\n      }\n    },\n    {\n      field: 'DistributionIndicator',\n      headerName: 'Dividend Treatment',\n      width: 180,\n      hideable: false\n    },\n    {\n      field: 'CashFlowFrequency',\n      headerName: 'Dividend Frequency',\n      width: 180,\n      hideable: false\n    },\n    {\n      field: 'exDivDate',\n      headerName: 'ex-Dividend Date',\n      width: 150,\n      hideable: false\n    },\n    {\n      field: 'Dividend',\n      headerName: 'Last Dividend',\n      description: 'Asset Under Management (as of June 2019, 2021)',\n      width: 120,\n      type: 'number',\n      valueGetter: (params: GridValueGetterParams) => {\n        return `${currency_formatter(params.row.Dividend, params.row.Currency) || ''}`\n      }\n    },\n    {\n      field: 'Yield',\n      headerName: 'Yield (%)',\n      type: 'number',\n      minWidth: 100,\n      flex: 1,\n      valueFormatter: digits_formatter,\n    },\n    {\n      field: 'DivGrowth',\n      headerName: 'Div Growth',\n      type: 'number',\n      minWidth: 100,\n      flex: 1,\n      valueGetter: (params: GridValueGetterParams) => {\n        return `${currency_formatter(params.row.Dividend, params.row.Currency) || ''}`\n      },\n      // valueFormatter: digits_formatter,\n      cellClassName: str_color_formatter,\n    },\n    {\n      field: 'DivGrowthPct',\n      headerName: 'Div Growth (%)',\n      type: 'number',\n      minWidth: 130,\n      flex: 1,\n      valueFormatter: digits_formatter,\n      cellClassName: number_color_formatter,\n    },\n    ]\n\n\n\n  const rows = props.args.data;\n  let columns : GridColDef[] = []\n  let fieldHeaders = []\n\n  if (display === 'Overview')  {\n    columns = columns_overview\n    } else if (display === 'Performance') {\n        if (return_type === 'Cumulative') {\n        columns = columns_cumulative\n      } else if (return_type === 'Annualised') {\n          columns = columns_annualised\n      } else {\n        fieldHeaders = Object.keys(rows[0])\n        columns = calender_year_columns(rows, fieldHeaders)\n      }  \n    } else if (display === 'Fund Flow') {\n      columns = columns_flow\n    } else if (display === 'Income'){\n      columns = columns_div\n    }else {\n\n    }\n    \n\n  const columnsHide = (headers) => {\n    interface hideColumnsType {\n      [key: string]: boolean\n    }\n    let yearsColumnsHide: hideColumnsType = {}\n    \n    if (headers.length > 12) {\n      headers.slice(12).forEach(item => {\n        yearsColumnsHide[item] = false\n      })\n    }\n    yearsColumnsHide['Price'] = false\n    yearsColumnsHide['Volume3M'] = false\n  \n    //console.log(yearsColumnsHide)\n    return yearsColumnsHide\n  }\n    \n  return (\n     <div style={{ height: 700, width: '100%' }}>\n     <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        checkboxSelection\n        loading={rows.length === 0}\n        rowHeight={50}\n        //disableSelectionOnClick\n\n        onSelectionModelChange={(newSelectionModel) => {\n           handleSelectionChange(newSelectionModel);\n         }}\n        selectionModel={selectionModel}\n        //initialState={{ pinnedColumns: { left: ['Ticker'] } }} need mui/x-data-grid-pro commercial license\n        \n        components={{\n            Toolbar: CustomToolbar,\n          }}\n        sx={{\n          '& .super-app.negative': {\n            color: '#D81414',\n            fontWeight: 'bold',\n          },\n          '& .super-app.positive': {\n            color: '#0DAA5B',\n            fontWeight: 'bold',\n          },\n        }}\n        initialState={{\n          columns: {\n            columnVisibilityModel: {\n              ...columnsHide(fieldHeaders),\n              Currency: display === 'Fund Flow' && currency === 'Fund currency' ? true : false\n            }\n        },\n      }}\n      />\n\n    </div>\n        \n  )\n}\n\nexport default withStreamlitConnection(SelectableDataTable)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SelectableDataTable from \"./SelectableDataTable\"\n\nReactDOM.render(<SelectableDataTable />, document.getElementById(\"root\"))\n"],"sourceRoot":""}